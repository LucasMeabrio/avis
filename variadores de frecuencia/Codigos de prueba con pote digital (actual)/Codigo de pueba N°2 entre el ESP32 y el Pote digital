// Pines de conexión para el AR-X9C103S
const int CS_PIN = 15;         // Chip Select
const int INC_PIN = 14;        // Incremento
const int UP_DOWN_PIN = 13;    // Dirección (incremento o decremento)

int targetFrequency = 0;       // Frecuencia deseada introducida por el usuario

void setup() {
  // Configuración de los pines de control
  pinMode(CS_PIN, OUTPUT);
  pinMode(INC_PIN, OUTPUT);
  pinMode(UP_DOWN_PIN, OUTPUT);

  // Inicializar los pines en estado alto
  digitalWrite(CS_PIN, HIGH);
  digitalWrite(INC_PIN, HIGH);
  digitalWrite(UP_DOWN_PIN, HIGH);

  Serial.begin(115200);
  Serial.println("Introduce la frecuencia deseada en el Monitor Serie:");
}

void loop() {
  // Comprobar si hay datos en el Monitor Serie
  if (Serial.available() > 0) {
    targetFrequency = Serial.parseInt(); // Leer la frecuencia ingresada por el usuario
    Serial.print("Frecuencia recibida: ");
    Serial.println(targetFrequency);

    // Ajustar la resistencia en función de la frecuencia
    adjustResistance(targetFrequency);
  }
  delay(500); // Pausa para evitar lecturas rápidas consecutivas
}

void adjustResistance(int frequency) {
  int steps = map(frequency, 0, 100, 0, 100); // Mapear frecuencia a pasos (ajustar según tu rango)

  // Incrementar la resistencia del potenciómetro al máximo
  Serial.println("Ajustando resistencia...");
  digitalWrite(UP_DOWN_PIN, HIGH);  // Configurar para incrementar
  digitalWrite(CS_PIN, LOW);        // Activar el potenciómetro

  for (int i = 0; i < steps; i++) {
    pulseIncrement();
    delay(50);  // Pausa entre pasos para observar el cambio
  }

  digitalWrite(CS_PIN, HIGH);       // Desactivar el potenciómetro
}

void pulseIncrement() {
  digitalWrite(INC_PIN, LOW);
  delayMicroseconds(1); // Pulso corto para cambiar el valor
  digitalWrite(INC_PIN, HIGH);
  delayMicroseconds(1);
}
